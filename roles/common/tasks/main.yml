---
- name: set the hostname
  hostname:
    name: "{{ inventory_hostname }}"

- name: add hostname to /etc/hosts
  lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.0\.1'
    line: '127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4 {{inventory_hostname}}'

- name: Install Prereq's
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - 'yum-utils'
    - 'device-mapper-persistent-data'
    - 'lvm2'
    - 'iscsi-initiator-utils'
    - 'git'
    - 'wget'
    - 'telnet'

- name: start and enable the iscsci initiator
  systemd:
    name: iscsid
    state: started
    enabled: True
    daemon_reload: yes

- name: load required modules
  modprobe:
    name: "{{ item }}"
    state: present
  with_items:
    - 'ip_vs_wrr'
    - 'ip_vs_sh'
    - 'ip_vs_rr'
    - 'ip_vs'

- name: disable SELinux
  command: setenforce 0

- name: disable SELinux on reboot
  selinux:
    state: disabled

- name: Remove any existing docker
  yum:
    name: "{{ item }}"
    state: removed
  with_items:
    - 'docker'
    - 'docker-common'

- name: add Docker YUM repository
  command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo

- name: install docker-ce
  command: yum install -y docker-ce-18.03.1.ce-1.el7.centos
  when: not ansible_check_mode

- name: enable some network settings
  sysctl:
   name: "{{ item }}"
   value: 1
   state: present
  with_items:
#    - "net.bridge.bridge-nf-call-ip6tables"
    - "net.bridge.bridge-nf-call-iptables"
    - "net.ipv4.ip_forward"

- name: start Docker
  systemd:
    name: docker
    state: started
    daemon_reload: yes
    enabled: yes
  when: not ansible_check_mode

- name: add Kubernetes YUM repository
  yum_repository:
   name: Kubernetes
   description: Kubernetes YUM repository
   baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
   gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
   gpgcheck: yes

- name: install kubelet, kubeadm, kubectl
  yum:
     name: "{{ item }}"
     state: present
  with_items:
    - 'kubelet'
    - 'kubeadm'
    - 'kubectl'
  when: not ansible_check_mode

- name: Ensure Docker and K8S belong to same cgroup
  lineinfile:
    path: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
    regexp: '^cgroup-driver'
    line: 'cgroup-driver=cgroupfs'
  when: not ansible_check_mode

- name: start kubelet
  systemd:
    name: "{{ item }}"
    enabled: yes
    daemon_reload: yes
    state: restarted
  with_items:
    - 'kubelet'
  when: not ansible_check_mode
